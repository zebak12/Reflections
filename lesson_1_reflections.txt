> How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    We could see the changes made in the new version and hence just go through only them to find the bug.

> How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    We could see all the chnages made, all the ideas which didn't work and the ones which worked.

> What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    We'll push only the version which works and is bug free instead of having all the versions saved. It saves the hassle. Also we can make different versions for differet bug fixes or features.

> Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Sometimes the verions have some attachments and necessary reffering files too which together constitute the project. Also in such VCS you can change a parameter across all the files unlike Google Docs.

> How can you use the commands git log and git diff to view the history of files?

    With [git log] we can see all the commits made in the files with a message for what change is made,
    But with [git diff <old file> <new file>] we can see all the changes made between 2 commits.

> How might using version control make you more confident to make changes that
could break something?

    The fact that you could easily revert to the previous stable version. And in case of any bug(or breakage of feature) you can check the previos versions and see what introduced the bug.

> Now that you have your workspace set up, what do you want to try using Git for?

    To save my versions of code which I can refer to later. I can also see which commit introduced the bug and be more confident while while introducing a new feature without the fear of its breakage.
